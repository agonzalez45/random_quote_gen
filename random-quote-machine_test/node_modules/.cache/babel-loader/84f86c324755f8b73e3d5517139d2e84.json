{"ast":null,"code":"var _jsxFileName = \"/Users/adolfogonzalez/Desktop/bottombar/random-quote-machine_test/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random';\nimport QuoteDiv from \"./components/Quote\";\nimport LikeButton from './components/LikeButton';\nimport { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios';\nimport axios from 'axios';\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const mongoose = require('mongoose');\n  //const url = 'mongodb+srv://bito94:bH7WWgibBDj29DHI@cluster0.c79rp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\n  //const client = new MongoClient(url);\n  //mongoose.connect(url)\n\n  /*\n  async function run() {\n    try {\n        await client.connect();\n        console.log(\"Connected correctly to server\");\n    } catch (err) {\n        console.log(err.stack);\n    }\n    finally {\n        await client.close();\n    }\n  }\n  run().catch(console.dir);\n  */\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [like, setLike] = useState([]);\n\n  const addLike = () => {\n    let newCount = 1;\n    console.log(newCount);\n    setLike(newCount);\n    sendGetRequest();\n  }; //returns liked quotes\n\n\n  const sendGetRequest = async () => {\n    try {\n      const resp = await axios.get('http://localhost:5000/personnel');\n      console.log(resp.data);\n    } catch (err) {\n      // Handle Error Here\n      console.error(err);\n    }\n  };\n\n  let quoteList; //this is use to run on start\n\n  useEffect(async () => {\n    if (quotesList.length === 0) {\n      const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"); //console.log(quotesResult.json());\n\n      quoteList = await quotesResult.json();\n      setQuotesList(quoteList.quotes);\n    } else {\n      setRandomQuote(quotesList);\n    } //if quoteslist isnt added here, it keeps rerendering forever\n\n  }, [quotesList]);\n\n  const setRandomQuote = list => {\n    const randNum = randIndex(list.length);\n\n    while (list[randNum].quote === quote.quote) {\n      randNum = randIndex(list.length);\n    }\n\n    console.log(list[randNum].quote);\n    setQuote(list[randNum]);\n  };\n\n  const randIndex = quotesLen => {\n    //console.log(quoteList.quotes.length)\n    console.log(quotesLen);\n\n    if (!quotesLen) {\n      return;\n    }\n\n    return Math.floor(Math.random() * quotesLen);\n  };\n\n  function nextQuoteClickHandler() {\n    setRandomQuote(quotesList);\n  }\n\n  function clickLike() {\n    addLike();\n  }\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(QuoteDiv, {\n      value: quote,\n      onQuoteChange: () => setRandomQuote(quotesList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: nextQuoteClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n      clickHandler: clickLike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"HELLO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/Ah9ouQZO0gI6djYLa9KzX91WOc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adolfogonzalez/Desktop/bottombar/random-quote-machine_test/src/App.jsx"],"names":["Button","React","useEffect","useState","random","QuoteDiv","LikeButton","AxiosProvider","Request","Get","Delete","Head","Post","Put","Patch","withAxios","axios","Slider","App","quotesList","setQuotesList","quote","setQuote","like","setLike","addLike","newCount","console","log","sendGetRequest","resp","get","data","err","error","quoteList","length","quotesResult","fetch","json","quotes","setRandomQuote","list","randNum","randIndex","quotesLen","Math","floor","nextQuoteClickHandler","clickLike","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows"],"mappings":"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","sourcesContent":["import './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random'\nimport QuoteDiv from \"./components/Quote\";\nimport LikeButton from './components/LikeButton';\nimport { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\nimport axios from 'axios';\n\n\nimport Slider from \"react-slick\";\n\n\n\nfunction App() {\n  //const mongoose = require('mongoose');\n  \n  //const url = 'mongodb+srv://bito94:bH7WWgibBDj29DHI@cluster0.c79rp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\n  //const client = new MongoClient(url);\n  //mongoose.connect(url)\n  /*\n  async function run() {\n    try {\n        await client.connect();\n        console.log(\"Connected correctly to server\");\n    } catch (err) {\n        console.log(err.stack);\n    }\n    finally {\n        await client.close();\n    }\n  }\n  run().catch(console.dir);\n  */\n\n\n\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [like, setLike] = useState([]);\n\n  \n\n  const addLike = () => {\n    let newCount = 1;\n    console.log(newCount);\n    setLike(newCount);\n    sendGetRequest();\n  }\n  //returns liked quotes\n  const sendGetRequest = async () => {\n    try {\n        const resp = await axios.get('http://localhost:5000/personnel');\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\n  let quoteList;\n  \n  //this is use to run on start\n  useEffect(async () => {\n    if (quotesList.length === 0) {\n      const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\");\n      //console.log(quotesResult.json());\n      quoteList = await (quotesResult.json());\n      \n      setQuotesList(quoteList.quotes)\n    }\n    else{\n      setRandomQuote(quotesList)\n    }\n    //if quoteslist isnt added here, it keeps rerendering forever\n  },[quotesList])\n\n\n  const setRandomQuote = list => {\n    const randNum = randIndex(list.length);\n    while(list[randNum].quote === quote.quote){\n      randNum = randIndex(list.length);\n    }\n    console.log(list[randNum].quote)\n    setQuote(list[randNum])\n  }\n  \n  const randIndex =  (quotesLen) => {\n    //console.log(quoteList.quotes.length)\n    console.log(quotesLen)\n    if(!quotesLen) {\n      return;\n    }\n    return Math.floor(Math.random()*quotesLen);\n  }\n\n  function nextQuoteClickHandler(){\n    setRandomQuote(quotesList)\n    \n  }\n  function clickLike(){\n    addLike()\n  }\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: true\n  };\n  \n  return (\n    <div className=\"App\" id=\"quote-box\" >\n      <QuoteDiv \n        value={quote}\n        onQuoteChange={() => setRandomQuote(quotesList)}\n      />\n      <Button buttonDisplayName=\"Next Quote\" clickHandler={nextQuoteClickHandler}/>\n      <LikeButton clickHandler={clickLike}/>\n      {/*<div>\n          <button\n            className=\"button\"\n            onClick={addLike}\n          >addlike\n          </button>\n      </div>*/}\n      <Slider {...settings}>\n          <div>\n            <h1>HELLO</h1>\n          </div>\n          <div>\n            <h3>2</h3>\n          </div>\n          <div>\n            <h3>3</h3>\n          </div>\n          <div>\n            <h3>4</h3>\n          </div>\n          <div>\n            <h3>5</h3>\n          </div>\n          <div>\n            <h3>6</h3>\n          </div>\n        </Slider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}