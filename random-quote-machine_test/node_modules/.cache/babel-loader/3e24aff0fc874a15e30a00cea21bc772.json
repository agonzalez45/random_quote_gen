{"ast":null,"code":"var _jsxFileName = \"/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [author, setAuthor] = useState([]);\n  let quoteList;\n\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"); //console.log(quotesResult.json());\n\n    quoteList = await quotesResult.json(); //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n\n    const randNum = randIndex(quoteList.quotes.length); ////const newQ = quoteList.quotes[5].quote\n    //const newA = quoteList.quotes[5].author\n    //console.log(quoteList.quotes.length)\n\n    setQuotesList(quoteList.quotes); //this will save state of a random quote\n    /////setQuotesList(quoteList.quotes[randNum].quote) \n    /////setAuthor(quoteList.quotes[randNum].author)\n  };\n\n  const getQuotes2 = async () => {\n    if (quotesList.length === 0) {\n      const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"); //console.log(quotesResult.json());\n\n      quoteList = await quotesResult.json(); //console.log(quoteList.quotes[0].quote);\n      //console.log(quoteList.quotes[0].author);\n      //const randNum = randIndex(quoteList.quotes.length);\n\n      setQuotesList(quoteList.quotes);\n    } else {\n      setRandomQuote(quotesList);\n    }\n  };\n\n  const setRandomQuote = list => {\n    const randNum = randIndex(list.length);\n\n    while (list[randNum].quote === quote.quote) {\n      randNum = randIndex(list.length);\n    }\n\n    console.log(list[randNum].quote);\n    setQuote(list[randNum]);\n  };\n\n  const randIndex = quotesLen => {\n    //console.log(quoteList.quotes.length)\n    console.log(quotesLen);\n\n    if (!quotesLen) {\n      return;\n    } //return Math.floor(Math.random()*quoteList.quotes.length);\n\n\n    return Math.floor(Math.random() * quotesLen);\n  };\n\n  function nextQuoteClickHandler() {\n    console.log(\"Hi\");\n    getQuotes2(); //console.log(quote)\n    //setRandomQuote(quotesList)\n    //console.log(quotesList)\n  } //getQuotes();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"quote-box\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: nextQuoteClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j/H3zZkWZ8yzC8LEpZtxWMW68a4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js"],"names":["Button","React","useEffect","useState","random","App","quotesList","setQuotesList","quote","setQuote","author","setAuthor","quoteList","getQuotes","quotesResult","fetch","json","randNum","randIndex","quotes","length","getQuotes2","setRandomQuote","list","console","log","quotesLen","Math","floor","nextQuoteClickHandler"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIS,SAAJ;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAAhC,CAD4B,CAE5B;;AACAH,IAAAA,SAAS,GAAG,MAAOE,YAAY,CAACE,IAAb,EAAnB,CAH4B,CAI5B;AACA;;AACA,UAAMC,OAAO,GAAGC,SAAS,CAACN,SAAS,CAACO,MAAV,CAAiBC,MAAlB,CAAzB,CAN4B,CAO5B;AACA;AACA;;AACAb,IAAAA,aAAa,CAACK,SAAS,CAACO,MAAX,CAAb,CAV4B,CAY5B;AACA;AACA;AAED,GAhBD;;AAiBA,QAAME,UAAU,GAAG,YAAY;AAC7B,QAAIf,UAAU,CAACc,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAMN,YAAY,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAAhC,CAD2B,CAE3B;;AACAH,MAAAA,SAAS,GAAG,MAAOE,YAAY,CAACE,IAAb,EAAnB,CAH2B,CAI3B;AACA;AACA;;AAEAT,MAAAA,aAAa,CAACK,SAAS,CAACO,MAAX,CAAb;AAED,KAVD,MAWI;AACFG,MAAAA,cAAc,CAAChB,UAAD,CAAd;AACD;AACF,GAfD;;AAiBA,QAAMgB,cAAc,GAAGC,IAAI,IAAI;AAC7B,UAAMN,OAAO,GAAGC,SAAS,CAACK,IAAI,CAACH,MAAN,CAAzB;;AACA,WAAMG,IAAI,CAACN,OAAD,CAAJ,CAAcT,KAAd,KAAwBA,KAAK,CAACA,KAApC,EAA0C;AACxCS,MAAAA,OAAO,GAAGC,SAAS,CAACK,IAAI,CAACH,MAAN,CAAnB;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,OAAD,CAAJ,CAAcT,KAA1B;AACAC,IAAAA,QAAQ,CAACc,IAAI,CAACN,OAAD,CAAL,CAAR;AACD,GAPD;;AASA,QAAMC,SAAS,GAAKQ,SAAD,IAAe;AAChC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACA,QAAG,CAACA,SAAJ,EAAe;AACb;AACD,KAL+B,CAMhC;;;AACA,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACvB,MAAL,KAAcsB,SAAzB,CAAP;AAED,GATD;;AAWA,WAASG,qBAAT,GAAgC;AAC9BL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAJ,IAAAA,UAAU,GAFoB,CAG9B;AACA;AACA;AACD,GAnEY,CAqEb;;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,WAAxB;AAAA,2BAEE,QAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAC,YAA1B;AAAuC,MAAA,YAAY,EAAEQ;AAArD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9EQxB,G;;KAAAA,G;AAgFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random'\n\n\nfunction App() {\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [author, setAuthor] = useState([]);\n\n  let quoteList;\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\");\n    //console.log(quotesResult.json());\n    quoteList = await (quotesResult.json());\n    //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n    const randNum = randIndex(quoteList.quotes.length);\n    ////const newQ = quoteList.quotes[5].quote\n    //const newA = quoteList.quotes[5].author\n    //console.log(quoteList.quotes.length)\n    setQuotesList(quoteList.quotes)\n\n    //this will save state of a random quote\n    /////setQuotesList(quoteList.quotes[randNum].quote) \n    /////setAuthor(quoteList.quotes[randNum].author)\n\n  }\n  const getQuotes2 = async () => {\n    if (quotesList.length === 0) {\n      const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\");\n      //console.log(quotesResult.json());\n      quoteList = await (quotesResult.json());\n      //console.log(quoteList.quotes[0].quote);\n      //console.log(quoteList.quotes[0].author);\n      //const randNum = randIndex(quoteList.quotes.length);\n     \n      setQuotesList(quoteList.quotes)\n\n    }\n    else{\n      setRandomQuote(quotesList)\n    }\n  }\n  \n  const setRandomQuote = list => {\n    const randNum = randIndex(list.length);\n    while(list[randNum].quote === quote.quote){\n      randNum = randIndex(list.length);\n    }\n    console.log(list[randNum].quote)\n    setQuote(list[randNum])\n  }\n  \n  const randIndex =  (quotesLen) => {\n    //console.log(quoteList.quotes.length)\n    console.log(quotesLen)\n    if(!quotesLen) {\n      return;\n    }\n    //return Math.floor(Math.random()*quoteList.quotes.length);\n    return Math.floor(Math.random()*quotesLen);\n\n  }\n\n  function nextQuoteClickHandler(){\n    console.log(\"Hi\");\n    getQuotes2();\n    //console.log(quote)\n    //setRandomQuote(quotesList)\n    //console.log(quotesList)\n  }\n\n  //getQuotes();\n  \n\n  return (\n    <div className=\"App\" id=\"quote-box\">\n      {/*{quotesList} {author} */}\n      <Button buttonDisplayName=\"Next Quote\" clickHandler={nextQuoteClickHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}