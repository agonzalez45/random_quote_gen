{"ast":null,"code":"var _jsxFileName = \"/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Random\n} = require(\"random-js\");\n\nfunction App() {\n  _s();\n\n  //state variables\n  const [text, setText] = useState([]);\n  const [author, setAuthor] = useState([]);\n  let quoteList;\n\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"); //console.log(quotesResult.json());\n\n    quoteList = await quotesResult.json(); //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n    //let randNum = randIndex();\n\n    console.log(randIndex());\n    setText(quoteList.quotes[0].quote);\n    setAuthor(quoteList.quotes[0].author);\n  };\n\n  const randIndex = () => {\n    //console.log(quoteList.quotes.length)\n    if (!quoteList.quotes.length) return;\n    return Random(0, quoteList.quotes.length - 1);\n  };\n\n  function nextQuoteClickHandler() {\n    console.log(\"Hi\");\n  }\n\n  getQuotes();\n  console.log(author);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"quote-box\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: nextQuoteClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WUnmvJzufP+01KeYB0mAXYZFyOY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js"],"names":["Button","React","useEffect","useState","Random","require","App","text","setText","author","setAuthor","quoteList","getQuotes","quotesResult","fetch","json","console","log","randIndex","quotes","quote","length","nextQuoteClickHandler"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,WAAD,CAA1B;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIQ,SAAJ;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAAhC,CAD4B,CAE5B;;AACAH,IAAAA,SAAS,GAAG,MAAOE,YAAY,CAACE,IAAb,EAAnB,CAH4B,CAI5B;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,EAArB;AACAV,IAAAA,OAAO,CAACG,SAAS,CAACQ,MAAV,CAAiB,CAAjB,EAAoBC,KAArB,CAAP;AACAV,IAAAA,SAAS,CAACC,SAAS,CAACQ,MAAV,CAAiB,CAAjB,EAAoBV,MAArB,CAAT;AAED,GAXD;;AAaA,QAAMS,SAAS,GAAI,MAAM;AACvB;AACA,QAAG,CAACP,SAAS,CAACQ,MAAV,CAAiBE,MAArB,EAA6B;AAC7B,WAAOjB,MAAM,CAAC,CAAD,EAAIO,SAAS,CAACQ,MAAV,CAAiBE,MAAjB,GAA0B,CAA9B,CAAb;AACD,GAJD;;AAMA,WAASC,qBAAT,GAAgC;AAC9BN,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AACDL,EAAAA,SAAS;AACTI,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,WAAxB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAC,YAA1B;AAAuC,MAAA,YAAY,EAAEa;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApCQhB,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nconst { Random } = require(\"random-js\");\n\n\nfunction App() {\n  //state variables\n  const [text, setText] = useState([]);\n  const [author, setAuthor] = useState([]);\n\n  let quoteList;\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\");\n    //console.log(quotesResult.json());\n    quoteList = await (quotesResult.json());\n    //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n    //let randNum = randIndex();\n    console.log(randIndex())\n    setText(quoteList.quotes[0].quote);\n    setAuthor(quoteList.quotes[0].author);\n    \n  }\n\n  const randIndex =  () => {\n    //console.log(quoteList.quotes.length)\n    if(!quoteList.quotes.length) return;\n    return Random(0, quoteList.quotes.length - 1);\n  }\n\n  function nextQuoteClickHandler(){\n    console.log(\"Hi\");\n  }\n  getQuotes();\n  console.log(author);\n\n  return (\n    <div className=\"App\" id=\"quote-box\">\n      <Button buttonDisplayName=\"Next Quote\" clickHandler={nextQuoteClickHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}