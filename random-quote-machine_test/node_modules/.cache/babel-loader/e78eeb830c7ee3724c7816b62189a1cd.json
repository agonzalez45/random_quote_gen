{"ast":null,"code":"var _jsxFileName = \"/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [text, setText] = useState([]);\n  const [author, setAuthor] = useState([]);\n  let quoteList;\n\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"); //console.log(quotesResult.json());\n\n    quoteList = await quotesResult.json(); //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n\n    const randNum = randIndex(); ////const newQ = quoteList.quotes[5].quote\n    //const newA = quoteList.quotes[5].author\n\n    console.log(quoteList.quotes);\n    setQuotesList(quoteList.quotes); //this will save state of a random quote\n\n    setQuotesList(quoteList.quotes[randNum].quote);\n    setAuthor(quoteList.quotes[randNum].author);\n  };\n\n  const randIndex = () => {\n    //console.log(quoteList.quotes.length)\n    if (!quoteList.quotes.length) {\n      return;\n    }\n\n    return Math.floor(Math.random() * quoteList.quotes.length);\n  };\n\n  function nextQuoteClickHandler() {\n    console.log(\"Hi\");\n    getQuotes(); //console.log(quotesList)\n  } //getQuotes();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"quote-box\",\n    children: [quotesList, \" \", author, /*#__PURE__*/_jsxDEV(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: nextQuoteClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c5ZSizSWu0A/t+F5Mv9l5NSyvME=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adolfogonzalez/Desktop/prenda/random-quote-machine/src/App.js"],"names":["Button","React","useEffect","useState","random","App","quotesList","setQuotesList","text","setText","author","setAuthor","quoteList","getQuotes","quotesResult","fetch","json","randNum","randIndex","console","log","quotes","quote","length","Math","floor","nextQuoteClickHandler"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIS,SAAJ;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAAhC,CAD4B,CAE5B;;AACAH,IAAAA,SAAS,GAAG,MAAOE,YAAY,CAACE,IAAb,EAAnB,CAH4B,CAI5B;AACA;;AACA,UAAMC,OAAO,GAAGC,SAAS,EAAzB,CAN4B,CAO5B;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACS,MAAtB;AACAd,IAAAA,aAAa,CAACK,SAAS,CAACS,MAAX,CAAb,CAV4B,CAa5B;;AACAd,IAAAA,aAAa,CAACK,SAAS,CAACS,MAAV,CAAiBJ,OAAjB,EAA0BK,KAA3B,CAAb;AACAX,IAAAA,SAAS,CAACC,SAAS,CAACS,MAAV,CAAiBJ,OAAjB,EAA0BP,MAA3B,CAAT;AAED,GAjBD;;AAmBA,QAAMQ,SAAS,GAAI,MAAM;AACvB;AACA,QAAG,CAACN,SAAS,CAACS,MAAV,CAAiBE,MAArB,EAA6B;AAC3B;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACpB,MAAL,KAAcQ,SAAS,CAACS,MAAV,CAAiBE,MAA1C,CAAP;AACD,GAND;;AAQA,WAASG,qBAAT,GAAgC;AAC9BP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAP,IAAAA,SAAS,GAFqB,CAG9B;AACD,GAtCY,CAwCb;;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,WAAxB;AAAA,eACGP,UADH,OACgBI,MADhB,eAEE,QAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAC,YAA1B;AAAuC,MAAA,YAAY,EAAEgB;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDQrB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Button from './components/Button';\nimport React, { useEffect, useState } from \"react\";\nimport random from 'random'\n\n\nfunction App() {\n  //state variables\n  const [quotesList, setQuotesList] = useState([]);\n  const [text, setText] = useState([]);\n  const [author, setAuthor] = useState([]);\n\n  let quoteList;\n  const getQuotes = async () => {\n    const quotesResult = await fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\");\n    //console.log(quotesResult.json());\n    quoteList = await (quotesResult.json());\n    //console.log(quoteList.quotes[0].quote);\n    //console.log(quoteList.quotes[0].author);\n    const randNum = randIndex();\n    ////const newQ = quoteList.quotes[5].quote\n    //const newA = quoteList.quotes[5].author\n    console.log(quoteList.quotes)\n    setQuotesList(quoteList.quotes)\n\n\n    //this will save state of a random quote\n    setQuotesList(quoteList.quotes[randNum].quote) \n    setAuthor(quoteList.quotes[randNum].author)\n    \n  }\n\n  const randIndex =  () => {\n    //console.log(quoteList.quotes.length)\n    if(!quoteList.quotes.length) {\n      return;\n    }\n    return Math.floor(Math.random()*quoteList.quotes.length);\n  }\n\n  function nextQuoteClickHandler(){\n    console.log(\"Hi\");\n    getQuotes();\n    //console.log(quotesList)\n  }\n\n  //getQuotes();\n  \n\n  return (\n    <div className=\"App\" id=\"quote-box\">\n      {quotesList} {author} \n      <Button buttonDisplayName=\"Next Quote\" clickHandler={nextQuoteClickHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}